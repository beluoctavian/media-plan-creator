<?php

/**
 * Implements hook_menu().
 */
function zeddigital_menu() {
  return array(
    'node/%node/delete_programmatically' => array(
      'title' => t('Delete'),
      'page callback' => 'redirect_to_node_delete',
      'access callback' => 'zeddigital_node_delete_access',
      'access arguments' => array($node),
      'callback arguments' => array($node),
      'type' => MENU_LOCAL_TASK,
      'weight' => 3,
    ),
    'node/%node/export_to_excel' => array(
      'title' => t('Export to EXCEL'),
      'page callback' => 'zeddigital_export_node_to_excel',
      'access callback' => 'zeddigital_node_export_access',
      'access arguments' => array($node),
      'callback arguments' => array($node),
      'type' => MENU_LOCAL_TASK,
      'weight' => 4,
    ),
  );
}

/**
 * Implements hook_libraries_info().
 */
function zeddigital_libraries_info() {
  return array(
    'PHPExcel' => array(
      'name' => 'PHPExcel',
      'vendor url' => 'http://phpexcel.codeplex.com/',
      'download url' => 'https://github.com/PHPOffice/PHPExcel',
      'version callback' => 'phpexcel_get_library_version',
      'path' => 'Classes',
      'files' => array(
        'php' => array(
          'PHPExcel.php',
        ),
      ),
    ),
  );
}

/**
 * Check if the user can delete the current node.
 */
function zeddigital_node_delete_access() {
  global $user;
  $node = node_load(arg(1));
  return node_access('delete', $node, $user);
}

/**
 * Check if the user can export the current node.
 */
function zeddigital_node_export_access() {
  global $user;
  $node = node_load(arg(1));
  return node_access('view', $node, $user);
}

/**
 * Helper function for menu_local_task.
 */
function redirect_to_node_delete() {
  if (arg(0) == 'node' && arg(1) && is_numeric(arg(1))) {
    drupal_goto('node/' . arg(1) . '/delete');
  }
}

function _initialize_excel_writer() {
  libraries_load('PHPExcel');
  $objPHPExcel = new PHPExcel();
  $objPHPExcel->setActiveSheetIndex(0);
  $activeSheet = $objPHPExcel->getActiveSheet();
  $style = array(
    'alignment' => array(
      'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER,
    ),
    'borders' => array(
      'allborders' => array(
        'style' => PHPExcel_Style_Border::BORDER_THIN,
        'color' => ['rgb' => 'FFFFFF'],
      ),
    ),
  );
  $activeSheet->getStyle('A1:AZ200')->applyFromArray($style);

  // Set columns width
  foreach(range('A','Z') as $columnID) {
    $activeSheet->getColumnDimension($columnID)->setAutoSize(true);
  }

  // Set rows height
  foreach(range(0, 300) as $rowID) {
    $activeSheet->getRowDimension($rowID)->setRowHeight(25);
  }

  $style = array(
    'font'  => array(
      'bold'  => false,
      'color' => array('rgb' => '000000'),
      'size'  => 8,
  ));
  $activeSheet->getStyle('A1:A200')->applyFromArray($style);

  return $objPHPExcel;
}

function _zeddigital_save_excel($objPHPExcel, $data, $node_wrapper) {
  $activeSheet = $objPHPExcel->getActiveSheet();

  // Store the file in sites/default/files
  $dir = file_stream_wrapper_get_instance_by_uri('public://')->realpath();
  $filename = 'media_plan_' . $node_wrapper->label(). '.xls';
  $file_path = "media_plans/$filename";
  $path = "$dir/$file_path";

  $max_row = 0;

  foreach ($data as $col => $values) {
    foreach ($values as $row => $val) {
      $max_row = $row > $max_row ? $row : $max_row;
      $activeSheet->SetCellValue($col.$row, $val);
    }
  }

  $objWriter = new PHPExcel_Writer_Excel2007($objPHPExcel);
  if (file_exists($path)) {
    unlink($path);
  }
  $objWriter->save($path);
  $old_drupal_file = $node_wrapper->field_excel_file->value();
  $file = (object) [
    'uid' => 1,
    'uri' => $path,
    'status' => 1,
    'display' => 1,
    'filename' => $filename,
    'filemime' => file_get_mimetype($path),
  ];
  $drupal_file = file_move($file, 'public://media_plans/excel_export/', FILE_EXISTS_REPLACE);
  if (empty($old_drupal_file)) {
    $node_wrapper->field_excel_file->set((array)$drupal_file);
    $node_wrapper->save();
  }
}

function _zeddigital_set_excel_header_data(&$sheet, array &$data, $node_wrapper) {
  $data['B'][1] = 'ONLINE CAMPAIGN';
  $start_row = 3;
  $data['B'][$start_row] = 'Client:';
  $data['D'][$start_row++] = $node_wrapper->field_client->value();
  $data['B'][$start_row] = 'Brand:';
  $data['D'][$start_row++] = $node_wrapper->field_brand->label();
  $data['B'][$start_row] = 'Campaign:';
  $data['D'][$start_row++] = $node_wrapper->field_campaign->value();
  $data['B'][$start_row] = 'Media Target Audience:';
  $data['D'][$start_row++] = $node_wrapper->field_media_target_audience->label();
  $data['B'][$start_row] = 'Period';
  if (!empty($node_wrapper->field_period->value())){
    $start_date = isset($node_wrapper->field_period) ? gmdate('d M Y', $node_wrapper->field_period->value->value()) : '';
    $end_date = isset($node_wrapper->field_period) ? gmdate(' - d M Y', $node_wrapper->field_period->value2->value()) : '';
    $data['D'][$start_row] = $start_date . $end_date;
  }
  $style = array(
    'borders' => array(
      'allborders' => array(
        'style' => PHPExcel_Style_Border::BORDER_MEDIUM,
        'color' => ['rgb' => '000000'],
      ),
    ),
  );
  $sheet->getStyle('B3:D7')->applyFromArray($style);
  return 9;
}

function _zeddigital_excel_set_category_header(&$sheet, array &$data, &$row_num, $category) {
  $category_title = $category->field_category_title->label();
  $data['B'][$row_num] = $category_title;
  $style = array(
    'fill' => array(
      'type' => PHPExcel_Style_Fill::FILL_SOLID,
      'color' => array('rgb' => '000000')
    ),
    'font'  => array(
      'bold'  => true,
      'color' => array('rgb' => 'FFFFFF'),
    ),
    'borders' => array(
      'allborders' => array(
        'style' => PHPExcel_Style_Border::BORDER_THIN,
        'color' => ['rgb' => '000000'],
      ),
    ),
  );
  $sheet->getStyle("B{$row_num}:I{$row_num}")->applyFromArray($style);
  $row_num++;
  $data['B'][$row_num] = 'Site';
  $data['C'][$row_num] = 'Supplier';
  $data['D'][$row_num] = 'Site category';
  $data['E'][$row_num] = 'Ad Format';
  $data['F'][$row_num] = 'Campaign type';
  $data['G'][$row_num] = 'Bought Adviews';
  $data['H'][$row_num] = 'Net Cost-Per-Thou (CPM)';
  $data['I'][$row_num] = 'Total net budget';
  $style['fill'] = array(
    'type' => PHPExcel_Style_Fill::FILL_SOLID,
    'color' => array('rgb' => '006600')
  );
  $style['font']['bold'] = false;
  $sheet->getStyle("B{$row_num}:I{$row_num}")->applyFromArray($style);
  $row_num++;
}

function _zeddigital_excel_append_site(&$sheet, array &$data, &$row_num, $website) {
  $site_name = $website->field_site->label();
  $supplier = $website->field_supplier->label();
  $site_category = $website->field_category->label();
  $ad_format = $website->field_ad_format->label();
  $campaign_type = $website->field_campaign_type->label();
  $bought_adviews = $website->field_bought_adviews->value();
  $cpm = $website->field_cpm->value();
  $total_net_budget = $website->field_total_net_budget->value();
  $data['A'][$row_num] .= "_{$row_num}";
  $data['B'][$row_num] = $site_name;
  $data['C'][$row_num] = $supplier;
  $data['D'][$row_num] = $site_category;
  $data['E'][$row_num] = $ad_format;
  $data['F'][$row_num] = $campaign_type;
  $data['G'][$row_num] = $bought_adviews;
  $data['H'][$row_num] = $cpm;
  $data['I'][$row_num] = $total_net_budget;

  $style = array(
    'borders' => array(
      'allborders' => array(
        'style' => PHPExcel_Style_Border::BORDER_THIN,
        'color' => ['rgb' => '000000'],
      ),
    ),
  );
  $sheet->getStyle("B{$row_num}:I{$row_num}")->applyFromArray($style);
  $row_num++;
}

/**
 * Export node to EXCEL.
 */
function zeddigital_export_node_to_excel($node = NULL) {
  if ($node == NULL) {
    if (!(arg(0) == 'node' && arg(1) && is_numeric(arg(1)))){
      return;
    }
    $node = node_load(arg(1));
  }
  $data = array();
  $node_wrapper = entity_metadata_wrapper('node', $node);
  $objPHPExcel = _initialize_excel_writer();
  $sheet = $objPHPExcel->getActiveSheet();
  $row_num = _zeddigital_set_excel_header_data($sheet, $data, $node_wrapper);

  foreach ($node_wrapper->field_categories as $category) {
    _zeddigital_excel_set_category_header($sheet, $data, $row_num, $category);
    foreach ($category->field_websites as $website) {
      $data['A'][$row_num] = "#{$node_wrapper->label()}";
      _zeddigital_excel_append_site($sheet, $data, $row_num, $website);
    }
    $row_num++;
  }
  _zeddigital_save_excel($objPHPExcel, $data, $node_wrapper);
  drupal_goto('node/' . $node->nid);
}

/**
 * Implements hook_form_alter().
 */
function zeddigital_form_alter(&$form, &$form_state, $form_id) {
  switch ($form_id) {
    case 'media_plan_node_form':
      unset($form['title']);
      break;
  }
}

/**
 * Implements hook_node_insert().
 */
function zeddigital_node_insert($node) {
  if ($node->type == 'media_plan') {
    $title = $node->nid;
    $title .= '_' . $node->field_brand[LANGUAGE_NONE][0]['name'];
    $title = str_replace(' ', '-', $title);
    db_update('node')
      ->fields(array('title' => $title,))
      ->condition('nid', $node->nid)
      ->execute();
    db_update('node_revision')
      ->fields(array('title' => $title,))
      ->condition('nid', $node->nid)
      ->execute();
  }
}

/**
 * Implements hook_field_widget_form_alter().
 */
function zeddigital_field_widget_form_alter(&$element, &$form_state, $context) {
  // TO DO: AJAX AUTOCOMPLETE
  if (!empty($element['#bundle']) && $element['#bundle'] == 'field_websites' && $element['#field_name'] == 'field_websites') {
    $field_bouglt_adviews = &$element['field_bought_adviews'];
    $field_cpm = &$element['field_cpm'];
    $field_total_net_budget = &$element['field_total_net_budget'];

    $field_bouglt_adviews['#attributes']['delta_website'] = array($context['delta']);
    $field_cpm['#attributes']['delta_website'] = array($context['delta']);
    $field_total_net_budget['#attributes']['delta_website'] = array($context['delta']);
    $field_total_net_budget['#attributes']['disabled'] = array('disabled');
  }
}

/**
 * Implements hook_node_update().
 */
function zeddigital_node_update($node) {
  if ($node->type == 'media_plan') {
    zeddigital_export_node_to_excel($node);
  }
}

/**
 * Implements hook_node_view().
 */
function zeddigital_node_view($node, $view_mode, $langcode) {
  if ($node->type == 'media_plan' && empty($node->field_excel_file)) {
    zeddigital_export_node_to_excel($node);
  }
}